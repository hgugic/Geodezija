using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Geodezija.MetodaNajmanjihKvadrata;
using MathNet.Numerics.LinearAlgebra.Double;

namespace Geodezija.UnitTests.MetodaNajmanjihKvadrataTest
{
    [TestClass]
    public class PosrednoIzjednacenjeTest
    {
        [TestMethod]
        public void PosrednoIzjednacenje_Izjednacenje_s_uvjetima_ReturnsTrue()
        {

            double[] Amat = new double[] { -0.642344123, -5.17955E-17, -1.55387E-16, 0, 0, 0, 0, 0, 0, -0.642344123, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.183885858, 0.845912664, 0.845912664, 0, 0, 0, 0, 0, 0, 0.183885858, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5.17955E-17, 1.55387E-16, -1.32881232, -0.906530679, -0.906530679, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, -0.845912664, -0.845912664, 0.822717088, 0.244355575, 0.244355575, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.906530679, 0.906530679, -0.324334263, -0.324334263, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.244355575, -0.244355575, -0.827598226, -0.827598226, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0.642344123, 0, 0, 0, 0, 0, 0.324334263, 0.324334263, 0.441609708, 0.642344123, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -0.183885858, 0, 0, 0, 0, 0, 0.827598226, 0.827598226, 0.546328096, -0.183885858, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 1.32881232, 0, 0, 0, 0, -0.441609708, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, -0.822717088, 0, 0, 0, 0, -0.546328096, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

            double[] Pmat = new double[] {};


            double[] fvec = new double[] { -1.510825038, 1.510825038, 0.840855955, -2.678903659, 1.838047704, 1.275577044, -1.275577044, -0.326921245, -2.878469774, 3.205391019, -2, -1, -1, -3, 2, 2, -5.68434E-11, -2, -3, 3};


            double[] Gmat = new double[] {0.447213595,0,0.447213595,0,0.447213595,0,0.447213595,0,0.447213595,0,0,0,0,0,0,0.447213595,0,0.447213595,0,0.447213595,0,0.447213595,0,0.447213595,0,0,0,0

};

            DenseMatrix A = new DenseMatrix(20, 14, Amat);
            DenseMatrix P = new DenseMatrix(20, 20, Pmat);
            DenseVector f = new DenseVector(fvec);
            DenseMatrix G = new DenseMatrix(14, 2, Gmat);

            PosrednoIzjednacenje izjednacenje = new PosrednoIzjednacenje(A, P, f, G);

            double test = 1.2701386915 - izjednacenje.sKvadrat;

            // tocnost test vrijednostije na 1 decimala
            Assert.IsTrue(test < Math.Pow(10, 10), "s2: " + test);
        }
    }
}
